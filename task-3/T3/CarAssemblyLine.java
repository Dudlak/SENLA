package T3;

class CarAssemblyLine implements IAssemblyLine {
    private final ILineStep bodyStep;
    private final ILineStep chassisStep;
    private final ILineStep engineStep;

    public CarAssemblyLine(ILineStep bodyStep, ILineStep chassisStep, ILineStep engineStep) {
        this.bodyStep = bodyStep;
        this.chassisStep = chassisStep;
        this.engineStep = engineStep;
        System.out.println("üè≠ –°–±–æ—Ä–æ—á–Ω–∞—è –ª–∏–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
        System.out.println("   –®–∞–≥ 1: " + bodyStep.getClass().getSimpleName());
        System.out.println("   –®–∞–≥ 2: " + chassisStep.getClass().getSimpleName());
        System.out.println("   –®–∞–≥ 3: " + engineStep.getClass().getSimpleName());
    }

    @Override
    public IProduct assembleProduct(IProduct product) {
        displayAssemblyStart();

        // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —ç—Ç–∞–ø—ã —Å–±–æ—Ä–∫–∏
        assembleBody(product);
        assembleChassis(product);
        assembleEngine(product);

        displayAssemblyComplete();
        return product;
    }

    private void displayAssemblyStart() {
        String separator = "=".repeat(50);
        System.out.println("\n" + separator);
        System.out.println("üèÅ –ù–ê–ß–ò–ù–ê–ï–ú –ü–†–û–¶–ï–°–° –°–ë–û–†–ö–ò –ê–í–¢–û–ú–û–ë–ò–õ–Ø");
        System.out.println(separator);
    }

    private void displayAssemblyComplete() {
        String separator = "=".repeat(50);
        System.out.println("\n" + separator);
        System.out.println("üéä –°–ë–û–†–ö–ê –ê–í–¢–û–ú–û–ë–ò–õ–Ø –ó–ê–í–ï–†–®–ï–ù–ê!");
        System.out.println(separator);
    }

    private void assembleBody(IProduct product) {
        System.out.println("\nüì¶ –≠–¢–ê–ü 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—É–∑–æ–≤–∞");
        IProductPart body = bodyStep.buildProductPart();
        product.installFirstPart(body);
        logPartInstallation("–ö—É–∑–æ–≤", body);
    }

    private void assembleChassis(IProduct product) {
        System.out.println("\nüì¶ –≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —à–∞—Å—Å–∏");
        IProductPart chassis = chassisStep.buildProductPart();
        product.installSecondPart(chassis);
        logPartInstallation("–®–∞—Å—Å–∏", chassis);
    }

    private void assembleEngine(IProduct product) {
        System.out.println("\nüì¶ –≠–¢–ê–ü 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è");
        IProductPart engine = engineStep.buildProductPart();
        product.installThirdPart(engine);
        logPartInstallation("–î–≤–∏–≥–∞—Ç–µ–ª—å", engine);
    }

    private void logPartInstallation(String partName, IProductPart part) {
        System.out.println("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω " + partName + ": " + part);
    }
}