@startuml Пациент_Медицинская_Программа

title Диаграмма классов: Сущность "Пациент"\nМедицинская программа для поликлиник

skinparam groupInheritance 2
skinparam class {
    BackgroundColor White
    ArrowColor #003366
    BorderColor #003366
}

' Перечисления (Enums)
enum Gender {
    MALE
    FEMALE
    OTHER
    UNSPECIFIED
}

enum BloodType {
    O_POSITIVE
    O_NEGATIVE
    A_POSITIVE
    A_NEGATIVE
    B_POSITIVE
    B_NEGATIVE
    AB_POSITIVE
    AB_NEGATIVE
}

enum RecordType {
    CONSULTATION
    EXAMINATION
    HOSPITALIZATION
    TEST_RESULT
}

enum VisitStatus {
    SCHEDULED
    IN_PROGRESS
    COMPLETED
    CANCELLED
    NO_SHOW
}

' Основные классы
class Patient {
    - id: String
    - lastName: String
    - firstName: String
    - patronymic: String
    - dateOfBirth: Date
    - gender: Gender
    - phoneNumber: String
    - email: String
    - address: Address
    - bloodType: BloodType
    - isActive: Boolean
    --
    + registerNewVisit(Visit): void
    + updateContactInfo(phone: String, email: String, address: Address): void
    + getMedicalHistory(): List<MedicalRecord>
    + getFullName(): String
}

class Address {
    - street: String
    - city: String
    - postalCode: String
    - country: String
    --
    + getFullAddress(): String
    + validateAddress(): boolean
}

class MedicalRecord {
    - recordId: String
    - date: Date
    - diagnosis: String
    - symptoms: String
    - prescribedTreatment: String
    - attendingDoctor: String
    - type: RecordType
    --
    + addTestResult(analysis: String, result: String): void
    + updateDiagnosis(newDiagnosis: String): void
    + isRelatedToChronicDisease(): boolean
}

class Visit {
    - visitId: String
    - scheduledDateTime: DateTime
    - actualDateTime: DateTime
    - department: String
    - doctor: String
    - status: VisitStatus
    - purpose: String
    - notes: String
    --
    + schedule(newDateTime: DateTime): void
    + cancel(reason: String): void
    + complete(notes: String): void
    + reschedule(newDateTime: DateTime): void
    + isOverdue(): boolean
}

' Связи между классами
Patient "1" *-- "1" Address
Patient "1" *-- "1..*" MedicalRecord
Patient "1" o-- "0..*" Visit

Patient --> Gender
Patient --> BloodType
MedicalRecord --> RecordType
Visit --> VisitStatus

note right of Patient
    Основная сущность пациента.
    Содержит персональные данные
    и медицинскую историю.
end note

note bottom of MedicalRecord
    Каждая запись представляет
    один медицинский случай
    или визит к врачу.
end note

@enduml